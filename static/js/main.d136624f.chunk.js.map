{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","prototype","ProTypes","number","isRequired","string","geners","arrayOf","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gVASA,SAASA,EAAT,GAAyD,EAAzCC,GAA0C,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAE9C,OACC,yBAAKC,UAAU,SAEX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACtC,yBAAKI,UAAU,cACf,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAE3B,wBAAIK,UAAU,UACVD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACd,wBAAIC,IAAKD,EAAOL,UAAU,iBACrBI,OAKR,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAA/C,SAQPd,EAAMe,UAAY,CACdd,GAAKe,IAASC,OAAOC,WACrBhB,KAAOc,IAASC,OAAOC,WACvBf,MAAQa,IAASG,OAAOD,WACxBd,QAAUY,IAASG,OAAOD,WAC1Bb,OAASW,IAASG,OAAOD,WACzBE,OAASJ,IAASK,QAAQL,IAASG,QAAQD,YAMhClB,QC8BAsB,G,iNApEXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,I,EAGZC,U,sBAAY,8BAAAC,EAAA,sEAWEC,IAAMC,IAAI,4DAXZ,gBAQIJ,EARJ,EAMJK,KACIA,KACIL,OAQZ,EAAKM,SAAS,CAACN,SAAQD,WAAW,IAhB1B,2C,mFAuBRQ,KAAKN,c,+BAGA,MAGuBM,KAAKT,MAA1BC,EAHF,EAGEA,UAAWC,EAHb,EAGaA,OAElB,OAAO,6BAASlB,UAAU,aAClBiB,EAIQ,yBAAKjB,UAAU,UACX,0BAAMA,UAAU,gBAAhB,cAIJ,yBAAKA,UAAU,UAEPkB,EAAOf,KAAI,SAAAuB,GAAK,OACZ,kBAAC,EAAD,CAAOpB,IAAKoB,EAAMhC,GAEdA,GAAIgC,EAAMhC,GACVC,KAAM+B,EAAM/B,KACXC,MAAO8B,EAAM9B,MACbC,QAAS6B,EAAM7B,QACfC,OAAQ4B,EAAMC,mBACd5B,OAAQ2B,EAAM3B,kB,GA3DrC6B,IAAMC,YCExBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d136624f.chunk.js","sourcesContent":["import React from \"react\"; //가장 먼저해야할것\r\nimport ProTypes from 'prop-types';\r\nimport \"./Movie.css\"; //js와 같은 이름의 css를 만들어서 설정해줄 거 \r\n\r\n//component가 state가 필요 없는 경우 class component가 될 필요는 없음\r\n// state가 필요없다 -> 정보를 보여주기만 한다. 바뀌지 않는다.\r\n//필요없다면 class -> function으로 변경\r\n\r\n//인자로 받을떄도 {}를 써주어야하는구나.. \r\nfunction Movie({id, year, title, summary, poster,genres}){\r\n  //  return <h1>{title}</h1> //매개변수의 값을 쓰려면 {}안에 쓴다. 그냥 title쓰면 글자로 나오니까.\r\n   return (\r\n    <div className=\"movie\">\r\n       {/* img의 title은 마우스 올려놓았을떄 이름이 나오도록 설정  */}\r\n        <img src={poster} alt={title} title={title} /> \r\n       <div className=\"movie_data\">\r\n       <h3 className=\"movie__title\">{title}</h3>\r\n       <h5 className=\"movie__year\">{year}</h5>\r\n         {/* ul안에서 li를 쓰는데 이걸 여러개 쓰기 위해서 map을 사용한다.  */}\r\n         <ul className=\"genres\">  \r\n            {genres.map((genre, index) => (\r\n          <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n              </li>\r\n       ))}\r\n       </ul>\r\n       {/* javascript 문법slice으로 글을 자름.  */}\r\n       <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\r\n       </div>\r\n   </div>\r\n);\r\n} \r\n\r\n//json에서 받아올 정보 (필요한 정보만 가져온다.)\r\n//여기서 확인을 하고 function Movie()의 인자로 전달한다. \r\nMovie.prototype = {\r\n    id : ProTypes.number.isRequired,\r\n    year : ProTypes.number.isRequired,\r\n    title : ProTypes.string.isRequired,\r\n    summary : ProTypes.string.isRequired,\r\n    poster : ProTypes.string.isRequired, //image는 string으로 \r\n    geners : ProTypes.arrayOf(ProTypes.string).isRequired//배열로 된 json가져오기\r\n\r\n}\r\n\r\n\r\n//다른 곳에서 import을 위해서 꼭 쓰자 \r\nexport default Movie;\r\n","import React from 'react';\r\n//import PropTypes from 'prop-types';  npm i prop-types  import 필수\r\nimport axios from \"axios\"; //fecth역할하는 기능\r\nimport Movie from './Movie'; // return <Movie/>\r\nimport \"./App.css\" \r\n\r\nclass App extends React.Component {\r\n\r\n    //변경할 데이터를 여기다가 넣는다.\r\n    state = {\r\n        isLoading: true,\r\n        movies: [] //배열생성 - json이 배열로 받기 때문에.\r\n    };\r\n\r\n    getMovies = async () => {\r\n        // axios는 마치 fecth위에 있는 작은 layer api받아오는 정보는 느릴 수 있기 때문에 async await을 붙여준다.\r\n        // async await : 야 너는 이걸 기다리고 다음을 진행해야해 const {data:{data:{movies}}} ES6문법\r\n        // console로 보면 data-data-movies로 이루어짐(그냥 주소로 들어갔을때랑 다름. ) beautfiy 컨트롤 쉬프트 비를 같이\r\n        // 누름\r\n        const {\r\n            data: {\r\n                data: {\r\n                    movies\r\n                }\r\n            }\r\n        } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n        // const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\r\n        // this.setState({movies:movies}) 앞의 movies는 state꺼, 뒤의 movies를 의미함. 하나의\r\n        // setState에서 두개의 state의 변수를 조절함. 정보를 다 가져온 후 에 isLoading을 false로 변경 -> 삼항연산자에서\r\n        // false값을 호출하게 됨.\r\n        this.setState({movies, isLoading: false}) //앞 뒤의 이름이 같다면 하나로 줄일 수 있음.\r\n    }\r\n\r\n    //render이후 자동으로 발생되는 함수(생명주기)\r\n    componentDidMount() {\r\n        // setTimeout( () => { delay function, 3초후에 변경   setState = { }을 위한 함수 모음은 없는 듯.\r\n        // this.setState({isLoading:false});   },3000);\r\n        this.getMovies(); //마운트 된 후에 이 함수를 호출하자.\r\n    }\r\n\r\n    render() {\r\n        // state에 있는 변수 쓸 때마다 this.state.isLoading을 쓰면 길어지기 때문에 const {원하는 변수명} =\r\n        // this.state을 쓴다.\r\n        const {isLoading, movies} = this.state;\r\n        \r\n        return <section className=\"container\">{\r\n                isLoading //true면 \"Loading\"\r\n                    ? (\r\n                      //jsx문법 => <section>{javaScript}</section>이기 때문에\r\n                      // class -> className으로 바꿔주어야한다. \r\n                        <div className=\"loader\">\r\n                            <span className=\"loader__text\">Loading..</span>\r\n                        </div>\r\n                    )\r\n                    : ( //삼항연산자 ? ()   () 안에 <div>가 들어가고 <div>{자바스크립트 문법 } <div>에서 \r\n                        <div className=\"movies\">\r\n                            {\r\n                                movies.map(movie => (\r\n                                    <Movie key={movie.id}\r\n                                        //맵에서 필수 \r\n                                        id={movie.id} \r\n                                        year={movie.year}\r\n                                         title={movie.title} \r\n                                         summary={movie.summary} \r\n                                         poster={movie.medium_cover_image}\r\n                                         genres={movie.genres}\r\n                                         \r\n                                         /> //import필수\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    )\r\n\r\n            }</section>\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n//  <App />를 컴포넌트라고 부른다 \r\n// 컴포넌트는 html을 반환하는 함수 \r\n// <App/>를 jsx라고 부른다 (html+javascript)\r\n// 여기서는 오직 하나만 -> <App/>만 사용이 가능하다. \r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}